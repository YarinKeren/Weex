/* Breakpoint mixins */
@mixin for-mobile-layout {
  @media (max-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: calc($narrow-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: calc($normal-breakpoint + 40px)) {
    @content;
  }
}

/* Media  Mixins */
@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;
  &::before {
    display: block;
    content: '';
    width: 100%;
    padding-top: calc(($height / $width) * 100%);
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  > img {
    height: 100%;
    object-fit: cover;
  }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}

// Mixins themes
@mixin theme-colors($primary, $secondary) {
  background-color: $primary;
  color: $secondary;
}

@mixin apply-theme($primary, $secondary, $textColor, $linkColor, $titleColor) {
  background: $primary;
  color: $textColor;

  p,
  span {
    color: $textColor;
  }

  a {
    color: $linkColor;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: $titleColor;
  }

  button {
    background-color: transparent;
    color: $textColor;
    border: 1px solid $textColor;
    transition: 0.2s ease-in-out;
    &:hover {
      background-color: $textColor;
      color: $secondary;
    }
  }
}

@mixin theme-gradients($primary, $secondary, $textColor, $linkColor, $titleColor) {
  background: linear-gradient(90deg, $primary, $secondary);
  color: $textColor;

  p,
  span {
    color: $textColor;
  }

  a {
    color: $linkColor;
    &:hover {
      color: darken($linkColor, 10%);
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: $titleColor;
  }

  button {
    background-color: transparent;
    color: $textColor;
    border: 1px solid $textColor;
    transition: 0.2s ease-in-out;
    &:hover {
      background-color: $textColor;
      color: $secondary;
    }
  }
}

// Mixins for buttons
@mixin btn(
  $type: regular,
  $bg: transparent,
  $clr: $sClr2,
  $padding: em(6px) em(16px),
  $hover: darken($bg, 8%)
) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  padding: $padding;
  line-height: 1.25;
  font-family: inherit;
  font-weight: 800;
  border: 1px solid white;
  border-radius: em(12px);
  cursor: pointer;

  transition: background-color 0.2s;

  @if $type == regular {
    background-color: $bg;
    color: $clr;
    &:hover {
      background-color: $hover;
    }
  } @else if $type == dark {
    background-color: $bg;
    color: $sClr4;
    border-color: $sClr4;
    &:hover {
      background-color: $sClr2;
      color: $sClr4;
    }
  } @else if $type == light {
    background-color: $clr3;
    color: $clr2;
    &:hover {
      background-color: $clr1;
      color: $clr3;
    }
  }
}
